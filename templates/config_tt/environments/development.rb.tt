Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.
<%- unless options.skip_sprockets? -%>

  config.middleware.insert 0, Middleware::TurboDev
  # bundle exec guard -P livereload -w ~/path/to/app ~/path/to/plugin
  # config.middleware.insert_after ActionDispatch::Static, Rack::LiveReload
<%- end -%>

  # In the development environment your application's code is reloaded on
  # every request. This slows down response time but is perfect for development
  # since you don't have to restart the web server when you make code changes.
  config.cache_classes = false

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable/disable caching. By default caching is disabled.
  if Rails.root.join('tmp/caching-dev.txt').exist?
    config.action_controller.perform_caching = true

    config.cache_store = :memory_store
    config.public_file_server.headers = {
      'Cache-Control' => 'public, max-age=172800'
    }
  else
    config.action_controller.perform_caching = false

    config.cache_store = :null_store
  end

  routes.default_url_options = { host: '127.0.0.1:3000' }
  <%- unless options.skip_action_mailer? -%>

  # Don't care if the mailer can't send.
  # config.action_mailer.raise_delivery_errors = false
  config.action_mailer.delivery_method = :smtp
  config.action_mailer.smtp_settings = { address: "127.0.0.1", port: 1025 }
  config.action_mailer.default_url_options = routes.default_url_options

  config.action_mailer.perform_caching = false
  <%- end -%>

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  <%- unless options.skip_active_record? -%>
  # Raise an error on page load if there are pending migrations.
  config.active_record.migration_error = :page_load

  <%- end -%>
  <%- unless options.skip_sprockets? -%>
  # Debug mode disables concatenation and preprocessing of assets.
  # This option may cause significant delays in view rendering with a large
  # number of complex assets.
  config.assets.debug = false

  # Asset digests allow you to set far-future HTTP expiration dates on all assets,
  # yet still be able to expire them through the digest params.
  config.assets.digest = false

  config.action_controller.asset_host = "http://localhost:3000"
  <%- unless options.skip_action_mailer? -%>
  config.action_mailer.asset_host = config.action_controller.asset_host
  <%- end -%>

  # Suppress logger output for asset requests.
  config.assets.quiet = true
  <%- end -%>

  # Raises error for missing translations
  # config.action_view.raise_on_missing_translations = true

  # Use an evented file watcher to asynchronously detect changes in source code,
  # routes, locales, etc. This feature depends on the listen gem.
  <%= '# ' unless depend_on_listen? %>config.file_watcher = ActiveSupport::EventedFileUpdateChecker

  config.logger = ActiveSupport::Logger.new(config.paths['log'].first, 1, 5*1024*1024) # 5Mb
end

ActiveRecordQueryTrace.enabled = false
ActiveRecordQueryTrace.level = :full
ActiveRecordQueryTrace.lines = 0

class NullLoger < Logger
  def initialize(*args)
  end

  def add(*args, &block)
  end
end

I18n::Debug.logger = NullLoger.new
